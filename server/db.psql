CREATE TABLE production_companies (
  id INTEGER PRIMARY KEY,
  name VARCHAR(255)
);

CREATE TABLE media (
  id INTEGER PRIMARY KEY,
  category VARCHAR(7) CHECK (category = 'movie' OR category = 'episode')
);

CREATE TABLE movies (
  id INTEGER PRIMARY KEY REFERENCES media(id),
  prod_company INTEGER REFERENCES production_companies(id),
  genre VARCHAR(255),
  is_mature BOOLEAN,
  title VARCHAR(255),
  release_year INTEGER
);

CREATE TABLE series (
  id INTEGER PRIMARY KEY,
  prod_company INTEGER REFERENCES production_companies(id),
  genre VARCHAR(255),
  is_mature BOOLEAN,
  season_count INTEGER,
  title VARCHAR(255)
);

CREATE TABLE seasons (
  series_id INTEGER REFERENCES series(id),
  season_number INTEGER,
  episode_count INTEGER,
  title VARCHAR(255),
  PRIMARY KEY (series_id, season_number)
);

CREATE TABLE episodes (
  id INTEGER PRIMARY KEY REFERENCES media(id),
  series_id INTEGER,
  season_number INTEGER,
  episode_number INTEGER,
  title VARCHAR(255),
  release_year INTEGER,
  FOREIGN KEY (series_id, season_number) REFERENCES seasons(series_id, season_number)
);

CREATE TABLE closed_captions (
  media_id INTEGER REFERENCES media(id),
  cc_language VARCHAR(16),
  PRIMARY KEY (media_id, cc_language)
);

CREATE TABLE audio_languages (
  media_id INTEGER REFERENCES media(id),
  audio_language VARCHAR(16),
  PRIMARY KEY (media_id, audio_language)
);

CREATE TABLE directors (
  name VARCHAR(255),
  media_id INTEGER REFERENCES media(id),
  PRIMARY KEY (name, media_id)
);

CREATE TABLE actors (
  fullname VARCHAR(255),
  acting_as VARCHAR(255),
  media_id INTEGER REFERENCES media(id),
  PRIMARY KEY (fullname, media_id)
);

CREATE TABLE users (
  id INTEGER PRIMARY KEY,
  name VARCHAR(16) NOT NULL,
  age INTEGER,
  email VARCHAR(255),
  number VARCHAR(30),
  creation_date INTEGER,
  expiration_date INTEGER,
  payment_status BOOLEAN,
  content_filtered BOOLEAN
);

CREATE TABLE subscriptions (
  user_id INTEGER REFERENCES users(id),
  series_id INTEGER REFERENCES series(id),
  PRIMARY KEY (user_id, series_id)
);

CREATE TABLE history (
  user_id INTEGER REFERENCES users(id),
  media_id INTEGER REFERENCES media(id),
  PRIMARY KEY (user_id, media_id)
);

CREATE TABLE locale (
  user_id INTEGER REFERENCES users(id),
  media_id INTEGER REFERENCES media(id),
  cc_language VARCHAR(16),
  audio_language VARCHAR(16),
  PRIMARY KEY (user_id, media_id),
  FOREIGN KEY (media_id, cc_language) REFERENCES closed_captions(media_id, cc_language),
  FOREIGN KEY (media_id, audio_language) REFERENCES audio_languages(media_id, audio_language)
);

CREATE TABLE completed_seasons (
  user_id INTEGER REFERENCES users(id),
  series_id INTEGER,
  season_number INTEGER,
  FOREIGN KEY (series_id, season_number) REFERENCES seasons(series_id, season_number)
);

CREATE TABLE ratings (
  user_id INTEGER REFERENCES users(id),
  media_id INTEGER REFERENCES media(id),
  rating INTEGER CHECK (rating >= 0 AND rating <= 5),
  PRIMARY KEY (user_id, media_id)
);
